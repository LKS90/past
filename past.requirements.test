<?php

/**
 * @file
 * Contains tests for the Past requirements.
 */

class PastRequirementsTest extends DrupalWebTestCase {

  protected $profile = 'testing';

  /**
   * {@inheritdoc}
   */
  static function getInfo() {
    return array(
      'name' => 'Past requirements tests',
      'description' => 'Tests requirements of the Past module.',
      'group' => 'Past',
    );
  }

  /**
   * {@inheritdoc}
   */
  function setUp() {
    parent::setUp(array('past', 'past_testhidden'));
    $admin = $this->drupalCreateUser(array('administer site configuration'));
    $this->drupalLogin($admin);
  }

  /**
   * Tests that the module requirements are correctly set.
   */
  function testRequirements() {
    // Check if error message appears when past_db is disabled.
    variable_set('past_backend', 'past_db_create_event');
    $this->drupalGet('admin/reports/status');
    $this->assertRaw(t('Past backend missing (%factory), install and configure a valid backend, like past_db.', array('%factory' => 'past_db_create_event')));

    // Now enable past_db, check if error message does not appear and
    // backend configuration is correct.
    module_enable(array('past_db'));
    $this->drupalGet('admin/reports/status');

    $this->assertNoRaw(t('Past backend missing (%factory), install and configure a valid backend, like past_db.', array('%factory' => 'past_db_create_event')));
    $this->assertText('Past backend is configured correctly.');

    // Check if a valid function returning a false or no event instance
    // creates an error message.
    variable_set('past_backend', 'past_testhidden_create_broken_event');
    $this->drupalGet('admin/reports/status');
    $this->assertRaw(t('Past backend (%factory) did not return a valid event instance.', array('%factory' => 'past_testhidden_create_broken_event')));

    // Check if a non existing function creates an error message.
    variable_set('past_backend', 'non_existing_function');
    $this->drupalGet('admin/reports/status');
    $this->assertRaw(t('Past backend missing (%factory), install and configure a valid backend, like past_db.', array('%factory' => 'non_existing_function')));
  }

}
