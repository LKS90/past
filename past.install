<?php

/**
 * @file
 * Install file for the Past module.
 */

use \Drupal\Core\Site\Settings;

/**
 * Implements hook_install().
 *
 * Sets the weight to low value so that past_init() is called prior to
 * other implementations.
 */
function past_install() {
//  db_update('system')
//    ->condition('name', 'past')
//    ->fields(array('weight' => -1000))
//    ->execute();
}

/**
 * Implements hook_requirements().
 */
function past_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    /** @var string $past_backend_factory */
    $past_backend_factory = Settings::get('past_backend');
    $severity = REQUIREMENT_OK;
    $description = t('Past backend is configured correctly.');
    if (!function_exists($past_backend_factory)) {
      $severity = REQUIREMENT_ERROR;
    $description = t('Past backend missing (%factory), install and configure a valid backend, like past_db.', array('%factory' => $past_backend_factory));
    }
    else {
      $event = $past_backend_factory();
      if (!$event) {
        $severity = REQUIREMENT_ERROR;
        $description = t('Past backend (%factory) did not return a valid event instance.', array('%factory' => $past_backend_factory));
      }
    }
    $requirements['past'] = array(
      'title' => t('Past backend'),
      'description' => $description,
      'value' => $past_backend_factory,
      'severity' => $severity,
    );
  }

  return $requirements;
}

/**
 * Delete variable past_watchdog_exclude.
 *
 * The variable was inversed and renamed to past_watchdog_include.
 */
function past_update_7000() {
  variable_del('past_watchdog_exclude');
}
