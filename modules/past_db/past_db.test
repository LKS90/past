<?php

/**
 * @file
 * Contains tests for the past_db Admin UI.
 */

class PastDBUiTest extends DrupalWebTestCase {

  protected $event_desc;
  protected $machine_name;
  protected $severities;

  static function getInfo() {
    return array(
      'name' => 'Past DB Admin-UI tests',
      'description' => 'Generic tests for testing the administration reports view',
      'group' => 'Past',
    );
  }

  function setUp() {
    parent::setUp(array('views', 'past', 'past_db'));

    // Set some for log creation.
    $this->machine_name = 'machine name';
    $this->severities = past_event_severities();
    $this->event_desc = 'message #';

    // Prepare some logs.
    for($i = 0; $i <= 99; $i++) {
      $event = past_event_create('past_db', $this->machine_name, $this->event_desc . ($i + 1));
      $event->addArgument('arg1', 'First Argument');
      $event->addArgument('arg2', new stdClass());
      $event->addArgument('arg3', FALSE);
      $event->setSeverity($this->severities[$i%3]);
      $event->save();
    }
  }

  /**
   * Tests the pas event log UI.
   */
  public function testAdminUI() {
    $admin = $this->drupalCreateUser(array('administer past'));
    $this->drupalLogin($admin);

    // Open the event log.
    $this->drupalGet('admin/reports/past');

    // Check for some messages.
    $this->assertText($this->event_desc . 100);
    $this->assertText($this->event_desc . 99);
    $this->assertText($this->event_desc . 98);
    $this->assertText($this->event_desc . 51);

    // Check severities.
    $this->assertText($this->severities[PAST_SEVERITY_DEBUG]);
    $this->assertText($this->severities[PAST_SEVERITY_INFO]);
    $this->assertText($this->severities[PAST_SEVERITY_WARNING]);

    // Check machine name.
    $this->assertText($this->machine_name);

    // Check for the exposed filter fields.
    $this->assertFieldByName('module', '');
    $this->assertFieldByName('severity[]', '');
    $this->assertFieldByName('message', '');

    // Check paging.
    $this->assertText('next ›');
    $this->assertText('last »');

    // Open the 2nd page.
    $options = array(
      'query' => array(
        'module' => '',
        'message' => '',
        'page' => 1,
      ),
    );
    $this->drupalGet('admin/reports/past', $options);

    // Check for some messages.
    $this->assertText($this->event_desc . 50);
    $this->assertText($this->event_desc . 49);
    $this->assertText($this->event_desc . 1);

    // Check paging.
    $this->assertText('‹ previous');
    $this->assertText('« first');

    // Go to the first detail page
    $this->drupalGet('admin/reports/past/1');

    $this->assertText($this->machine_name);
    $this->assertText($this->event_desc . 1);
    $this->assertText('arg1');
    $this->assertText('arg2');
    $this->assertText('arg3');
    $this->assertText('First Argument');

    $this->drupalLogout();

    // Check permissions for detail page.
    $this->drupalGet('admin/reports/past/1');
    $this->assertText(t('You are not authorized to access this page'));
    // Check permissions for event log.
    $this->drupalGet('admin/reports/past');
    $this->assertText(t('You are not authorized to access this page'));
  }
}
